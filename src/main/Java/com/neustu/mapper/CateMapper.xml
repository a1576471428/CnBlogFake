<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neustu.mapper.CateMapper">
    <!--通过select执行数据库查询
       id:标识映射文件中的sql
       将sql语句封装到mappedStatement对象中，所以id称为Statement的id
       #{}：表示占位符
       #{id}：其中的id表示接收输入的参数，参数名称就是id，如果输入参数是简单类型，那么#{}中的参数名可以任意，可以是value或者其他名称
       parameterType：表示指定输入参数的类型
       resultType：表示指定sql输出结果的所映射的java对象类型
-->

<select id="getAllCateByUserId" parameterType="int" resultType="BlogClass">
    SELECT * FROM blog_class WHERE UserID=#{VALUE } ORDER BY Count DESC , Name
</select>
    <insert id="addCate" parameterType="BlogClass">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select LAST_INSERT_ID()
        </selectKey>
        insert into blog_class(userid,pkey,name,count, isvisible, createTime)
        values(#{userid}, #{pkey}, #{name}, #{count}, #{isvisible}, #{createtime})
    </insert>

    <delete id="deleteCate" parameterType="int">
        DELETE FROM blog_class WHERE ID=#{VALUE }
    </delete>

    <select id="getCateById" parameterType="int" resultType="BlogClass">
        SELECT * FROM blog_class WHERE ID=#{VALUE }
    </select>

    <update id="editCate" parameterType="BlogClass">
        UPDATE blog_class SET pkey=#{pkey},
        name=#{name},
        count=#{count},
        IsVisible=#{isvisible}
        WHERE id=#{id}
    </update>
</mapper>
